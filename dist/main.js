let global = this;
function initializeSheet() {
}
function postData() {
}
function getRecentData() {
}
function updateData() {
}
function testPostData() {
}
function testGetRecentData() {
}
function testUpdateData() {
}
var E={sheets:[{name:"3-1-1",columns:[{name:"datetime",type:"datetime",threshold:null},{name:"\u5869\u5206\u6FC3\u5EA6",type:"number",threshold:{min:5,max:35}},{name:"DO",type:"number",threshold:{target:8,tolerance:10}},{name:"\u6C34\u6E29",type:"number",threshold:{min:0,max:40}},{name:"\u5916\u6C17\u6E29",type:"number",threshold:{target:20,tolerance:5}}]},{name:"3-1-2",columns:[{name:"datetime",type:"datetime",threshold:null},{name:"\u5869\u5206\u6FC3\u5EA6",type:"number",threshold:{min:5,max:35}},{name:"DO",type:"number",threshold:{target:8,tolerance:10}},{name:"\u6C34\u6E29",type:"number",threshold:{min:0,max:40}},{name:"\u5916\u6C17\u6E29",type:"number",threshold:{target:20,tolerance:5}}]}]};var g="1ikEvU2I88BuvYGxegNe8dLsQlcU-POjN7vlIUK4Bf7o";function N(){let t=SpreadsheetApp.openById(g);E.sheets.forEach(e=>{let s=t.getSheetByName(e.name);s||(s=t.insertSheet(e.name)),s.clear();let a=e.columns.map(c=>c.name);s.getRange(1,1,1,a.length).setValues([a])}),Logger.log("\u30B7\u30FC\u30C8\u306E\u4F5C\u6210\u30FB\u66F4\u65B0\u304C\u5B8C\u4E86\u3057\u307E\u3057\u305F\u3002")}function f(t,e){let a=SpreadsheetApp.openById(t).getSheetByName(e);if(!a)throw new Error(`\u30B7\u30FC\u30C8 '${e}' \u304C\u898B\u3064\u304B\u308A\u307E\u305B\u3093`);return a}function R(t){try{let e=JSON.parse(t),s=e.sheetName,a=e.data;if(!s||!a)return{success:!1,message:"Invalid request: sheetName and data are required."};let c=f(g,s);if(!c)return{success:!1,message:`Error: Sheet '${s}' not found.`};let r=c.getRange(1,1,1,c.getLastColumn()).getValues()[0],n=Object.keys(a);if(!V(n,r))return{success:!1,message:`Error: Request data keys do not match sheet headers. Expected keys: ${r.join(", ")}, but received: ${n.join(", ")}`};let m=r.map(d=>a[d]??"");return c.appendRow(m),{success:!0,message:"\u30C7\u30FC\u30BF\u3092\u8FFD\u52A0\u3057\u307E\u3057\u305F\u3002"}}catch(e){return{success:!1,message:`Error: ${e instanceof Error?e.message:"An unknown error occurred."}`}}}function V(t,e){return t.length!==e.length?!1:t.every((s,a)=>s===e[a])}function w(){let t=JSON.stringify({sheetName:"3-1-1",data:{datetime:"2024-02-25 11:00:00",\u5869\u5206\u6FC3\u5EA6:"2024-02-25 11:00:00",DO:8.4,\u6C34\u6E29:2,\u5916\u6C17\u6E29:2}}),e=R(t);Logger.log(e)}function S(t){try{let s=SpreadsheetApp.openById(g).getSheets(),a=[];return s.forEach(r=>{let n=r.getName(),m=r.getLastColumn(),d=r.getLastRow();if(m===0||d===0)return;let y=r.getRange(1,1,1,m).getValues()[0],p=y.indexOf("updated_at");if(p===-1)return;let i=r.getDataRange().getValues().slice(1).map(o=>y.reduce((u,D,l)=>(u[D]=l===p&&o[l]instanceof Date?Utilities.formatDate(o[l],Session.getScriptTimeZone(),"yyyy-MM-dd HH:mm:ss"):String(o[l]),u),{})).sort((o,u)=>u.updated_at>o.updated_at?1:-1).slice(0,t).map(o=>({...o,sheet:n}));a=a.concat(i)}),{success:!0,data:a.sort((r,n)=>n.updated_at>r.updated_at?1:-1).slice(0,t)}}catch(e){return{success:!1,message:`Error: ${e instanceof Error?e.message:"An unknown error occurred."}`}}}function I(){let t=S(5);console.log(t)}function x(t){try{let e=JSON.parse(t),s=e.sheetName,a=e.searchKeys,c=e.updateValues;if(console.log("searchKeys",a),console.log("updateValues",c),!s||!a||!c)return{success:!1,message:"Invalid request: sheetName, searchKeys, and updateValues are required."};let r=f(g,s);if(!r)return{success:!1,message:`Error: Sheet '${s}' not found.`};let n=r.getRange(1,1,1,r.getLastColumn()).getValues()[0],m=Object.keys(a);if(!m.every(i=>n.includes(i)))return{success:!1,message:`Error: Some search criteria keys do not exist in sheet headers. Expected keys: ${n.join(", ")}, but received: ${m.join(", ")}`};let d=Object.keys(c);if(!d.every(i=>n.includes(i)))return{success:!1,message:`Error: Some update values keys do not exist in sheet headers. Expected keys: ${n.join(", ")}, but received: ${d.join(", ")}`};let p=r.getDataRange().getValues().slice(1);console.log("dataRows",p);let h=p.map((i,o)=>({row:i.map((u,D)=>{let l=n[D];return l==="datetime"&&u instanceof Date||l==="\u5869\u5206\u6FC3\u5EA6"&&u instanceof Date?Utilities.formatDate(u,Session.getScriptTimeZone(),"yyyy-MM-dd HH:mm:ss"):u}),index:o+2})).filter(({row:i})=>m.every(o=>String(i[n.indexOf(o)])===String(a[o])));if(console.log("matchingRows",h),h.length===0)return{success:!1,message:"Error: No matching records found for the given criteria."};if(h.length>1)return{success:!1,message:"Error: Multiple records match the given criteria. Please provide more specific search criteria."};let b=h[0].index;return d.forEach(i=>{let o=n.indexOf(i);r.getRange(b,o+1).setValue(c[i])}),{success:!0,message:"Data successfully updated."}}catch(e){return{success:!1,message:`Error: ${e instanceof Error?e.message:"An unknown error occurred."}`}}}function k(){let t=JSON.stringify({sheetName:"3-1-1",searchKeys:{datetime:"2024-02-25 12:00:00",\u5916\u6C17\u6E29:3},updateValues:{DO:9.1,\u6C34\u6E29:25}}),e=x(t);Logger.log(e)}global.initializeSheet=N;global.postData=R;global.getRecentData=S;global.updateData=x;global.testPostData=w;global.testGetRecentData=I;global.testUpdateData=k;
